#  装饰器介绍 参考 https://www.dusaiphoto.com/article/73/
# 装饰器是闭包的一种应用



# 装饰器的作用是原函数的功能不变，调用的时候附加了其他功能
def outer(func):
    def inner():
        print('Before func()...')
        func()
        print('After func()...')
    return inner

def hi():
    print('Hi World')
    
h = outer(hi)    # 等同于 @outer
h()

# 输出
Before func()...
Hi World
After func()...


---------------------------------------------------------------------------------
# 标准的装饰器模板
import functools

def decorator(func):
    @functools.wraps(func)
    def wrapper(*args,**kwargs):
        # 原函数运行前
        # Do something
        value = func(*args,**kwargs)
        # 原函数运行后
        # Do something
        return value
    return wrapper
